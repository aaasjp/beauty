<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zzq.beauty.mapper.BrokerMapper" >
  <resultMap id="BaseResultMap" type="com.zzq.beauty.model.Broker" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="client" property="client" jdbcType="INTEGER" />
    <result column="puller" property="puller" jdbcType="INTEGER" />
    <result column="startDate" property="startdate" jdbcType="TIMESTAMP" />
    <result column="endDate" property="enddate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, client, puller, startDate, endDate
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from broker
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from broker
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zzq.beauty.model.Broker" >
    insert into broker (id, client, puller, 
      startDate, endDate)
    values (#{id,jdbcType=INTEGER}, #{client,jdbcType=INTEGER}, #{puller,jdbcType=INTEGER}, 
      #{startdate,jdbcType=TIMESTAMP}, #{enddate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zzq.beauty.model.Broker" >
    insert into broker
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="client != null" >
        client,
      </if>
      <if test="puller != null" >
        puller,
      </if>
      <if test="startdate != null" >
        startDate,
      </if>
      <if test="enddate != null" >
        endDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="client != null" >
        #{client,jdbcType=INTEGER},
      </if>
      <if test="puller != null" >
        #{puller,jdbcType=INTEGER},
      </if>
      <if test="startdate != null" >
        #{startdate,jdbcType=TIMESTAMP},
      </if>
      <if test="enddate != null" >
        #{enddate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzq.beauty.model.Broker" >
    update broker
    <set >
      <if test="client != null" >
        client = #{client,jdbcType=INTEGER},
      </if>
      <if test="puller != null" >
        puller = #{puller,jdbcType=INTEGER},
      </if>
      <if test="startdate != null" >
        startDate = #{startdate,jdbcType=TIMESTAMP},
      </if>
      <if test="enddate != null" >
        endDate = #{enddate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zzq.beauty.model.Broker" >
    update broker
    set client = #{client,jdbcType=INTEGER},
      puller = #{puller,jdbcType=INTEGER},
      startDate = #{startdate,jdbcType=TIMESTAMP},
      endDate = #{enddate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectLaster" parameterType="java.lang.Integer" resultType="com.zzq.beauty.model.Broker">
    select * from broker where endDate IS NULL order by startDate DESC LIMIT 1
  </select>

  <select id="getAllPuller" resultType="java.util.HashMap">
    SELECT
    p.`name`,
    p.phone,
    b.startDate,
    b.endDate,
    person.`name` AS pullerName,
    person.phone AS pullerPhone
    FROM
    (broker AS b JOIN person AS p ON b.client = p.id )
    LEFT JOIN person ON person.id = b.puller
    WHERE
    1=1


      <if test="user != '%%'" >
        AND
        (
        p.`name` LIKE #{user}
        OR p.phone LIKE #{user}
        )
      </if>
      <if test="puller != '%%'" >
        AND (
        person.`name` LIKE #{puller}
        OR person.phone LIKE #{puller}
        )
      </if>
    ORDER BY
    b.id ASC
  </select>
</mapper>