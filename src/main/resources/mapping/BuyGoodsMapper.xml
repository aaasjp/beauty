<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zzq.beauty.mapper.BuyGoodsMapper" >
  <resultMap id="BaseResultMap" type="com.zzq.beauty.model.BuyGoods" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="goodsId" property="goodsid" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="REAL" />
    <result column="goodsSnapshot" property="goodssnapshot" jdbcType="VARCHAR" />
    <result column="createDate" property="createdate" jdbcType="TIMESTAMP" />
    <result column="num" property="num" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="updateDate" property="updatedate" jdbcType="TIMESTAMP" />
    <result column="personId" property="personId" jdbcType="INTEGER" />
    <result column="carerecordId" property="carerecordId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, goodsId, price, goodsSnapshot, createDate, num, state, updateDate, personId,carerecordId
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from buygoods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from buygoods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zzq.beauty.model.BuyGoods" >
    insert into buygoods (id, goodsId, price, 
      goodsSnapshot, createDate, num, 
      state, updateDate, personId,carerecordId
      )
    values (#{id,jdbcType=INTEGER}, #{goodsid,jdbcType=INTEGER}, #{price,jdbcType=REAL}, 
      #{goodssnapshot,jdbcType=VARCHAR}, #{createdate,jdbcType=TIMESTAMP}, #{num,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER}, #{updatedate,jdbcType=TIMESTAMP}, #{personId,jdbcType=INTEGER},#{carerecordId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zzq.beauty.model.BuyGoods" >
    insert into buygoods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="goodsid != null" >
        goodsId,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="goodssnapshot != null" >
        goodsSnapshot,
      </if>
      <if test="createdate != null" >
        createDate,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="updatedate != null" >
        updateDate,
      </if>
      <if test="personId != null" >
        personId,
      </if>
      <if test="carerecordId != null" >
        carerecordId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="goodsid != null" >
        #{goodsid,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=REAL},
      </if>
      <if test="goodssnapshot != null" >
        #{goodssnapshot,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="updatedate != null" >
        #{updatedate,jdbcType=TIMESTAMP},
      </if>
      <if test="personId != null" >
        #{personId,jdbcType=INTEGER},
      </if>
      <if test="carerecordId != null" >
        #{carerecordId,jdbcType=INTEGER}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzq.beauty.model.BuyGoods" >
    update buygoods
    <set >
      <if test="goodsid != null" >
        goodsId = #{goodsid,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=REAL},
      </if>
      <if test="goodssnapshot != null" >
        goodsSnapshot = #{goodssnapshot,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        createDate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="updatedate != null" >
        updateDate = #{updatedate,jdbcType=TIMESTAMP},
      </if>
      <if test="personId != null" >
        personId = #{personId,jdbcType=INTEGER},
      </if>
      <if test="carerecordId != null" >
        carerecordId = #{carerecordId,jdbcType=INTEGER}
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zzq.beauty.model.BuyGoods" >
    update buygoods
    set goodsId = #{goodsid,jdbcType=INTEGER},
      price = #{price,jdbcType=REAL},
      goodsSnapshot = #{goodssnapshot,jdbcType=VARCHAR},
      createDate = #{createdate,jdbcType=TIMESTAMP},
      num = #{num,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      updateDate = #{updatedate,jdbcType=TIMESTAMP},
      personId = #{personId,jdbcType=INTEGER},
      carerecordId = #{carerecordId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="buyGoodsList" parameterType="java.lang.String" resultType="java.util.HashMap">
    SELECT buygoods.id,person.`name` AS userName,goods.`name` AS goodsName,buygoods.price,buygoods.goodsSnapshot,buygoods.createDate,buygoods.num,buygoods.state,buygoods.personId,buygoods.carerecordId
    FROM buygoods,person,goods WHERE  buygoods.personId=person.id AND goods.id=buygoods.goodsId
    AND  (person.`name` LIKE #{keyWord} OR goods.`name` LIKE #{keyWord} ) ORDER BY buygoods.createDate DESC
  </select>

  <select id="getBuyGoodsAnEnd" parameterType="java.lang.Integer" resultType="java.util.HashMap">
    SELECT buygoods.id,buygoods.goodsSnapshot,goods.`name`  FROM buygoods,goods WHERE buygoods.goodsId=goods.id AND buygoods.personId=#{personId} AND buygoods.state=1
  </select>

  <select id="getCareBuyGoods" parameterType="java.util.List" resultType="java.util.HashMap">
    SELECT goods.name AS goodsName,goods.price as goodsPrice FROM goods WHERE goods.id in
    <foreach collection="list" item="id"  open="(" separator="," close=")">
      #{id}
    </foreach>
  </select>

  <select id="getSales" resultType="java.util.HashMap">
    SELECT buygoods.id,person.`name` AS userName,buygoods.price,buygoods.goodsSnapshot,buygoods.createDate,buygoods.num,buygoods.state,buygoods.personId,buygoods.carerecordId
    FROM buygoods,person WHERE  buygoods.personId=person.id
    AND (buygoods.createDate &gt;= #{startDate}  AND buygoods.createDate &lt;= #{endDate} ) AND  person.`name` LIKE #{keyWord}
    ORDER BY buygoods.createDate DESC
  </select>

  <select id="getSale" resultType="java.lang.Double">
    SELECT IFNULL(SUM(price),0) FROM buygoods WHERE buygoods.createDate &gt;= #{startDate} AND buygoods.createDate &lt;= #{endDate}
  </select>
  <select id="getSaleGoodsNum" resultType="java.lang.Long">
    SELECT IFNULL(SUM(num),0) FROM buygoods WHERE buygoods.createDate &gt;= #{startDate} AND buygoods.createDate &lt;= #{endDate}
  </select>

  <select id="getBuyGoodsByCareId" resultType="java.util.HashMap">
    SELECT * FROM buygoods WHERE carerecordId = #{carerecordId}
  </select>

</mapper>